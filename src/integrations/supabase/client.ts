// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://zzijiecsvyzaqedatuip.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp6aWppZWNzdnl6YXFlZGF0dWlwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIzNTY5ODYsImV4cCI6MjA2NzkzMjk4Nn0.QGm_1PVmP6s9mJtchkIGeQ_Hj6cq-6352aKiDBVcdXk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Enhanced error handling and logging for debugging
const createSupabaseClient = () => {
  try {
    if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
      console.error('CRITICAL: Supabase configuration missing:', {
        url: !!SUPABASE_URL,
        key: !!SUPABASE_PUBLISHABLE_KEY
      });
      throw new Error('Supabase configuration is incomplete');
    }

    // Validate URL format
    try {
      new URL(SUPABASE_URL);
    } catch (urlError) {
      console.error('CRITICAL: Invalid Supabase URL format:', SUPABASE_URL);
      throw new Error(`Invalid Supabase URL: ${SUPABASE_URL}`);
    }

    console.log('âœ… Supabase client initialization:', {
      url: SUPABASE_URL,
      keyLength: SUPABASE_PUBLISHABLE_KEY.length
    });

    return createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        storage: localStorage,
        persistSession: true,
        autoRefreshToken: true,
      }
    });
  } catch (error) {
    console.error('FATAL: Failed to create Supabase client:', error);
    throw error;
  }
};

export const supabase = createSupabaseClient();